<form>

    <!-- • Doctor ID - Text Field (Numeric only)
• Availability Date - Date Picker (Future Date only)
• Start time - Time Picker
• End time - Time Picker (Can not be less than start time)
• Slot duration - Select Field (15,30,45,60 minutes) -->
    <div class="form-group">
      <label for="exampleInputEmail1">Doctor ID</label>
      <input type="number" class="form-control" id="docid" aria-describedby="emailHelp" placeholder="docid">
    
    </div>
    <div class="form-group">
      <label for="exampleInputPassword1">Availability Date</label>
      <input type="date" class="form-control" id="avdate" placeholder="Password">
    </div>
    <div class="form-group">
        <label for="exampleInputPassword1">Slot duration</label>
        <select class="form-select" id="slot" aria-label="Default select example" >
            <option selected value="30">30 </option>
           
            <option value="60">60</option>
            <option value="90">90</option>
            <option value="120">120</option>
          </select>
      </div>
      <div class="form-outline">
        <label class="form-label" for="starttime">Start time</label>
        <select class="form-select" id="starttime" multiple>
          <!-- Start time options will be dynamically generated -->
        </select>
      </div>
      
      <div class="form-outline">
        <label class="form-label" for="endtime">End time</label>
        <select class="form-select" id="endtime" multiple>
          <!-- End time options will be dynamically generated -->
        </select>
      </div>
      
      
    
     
   
    <button type="button" class="btn btn-primary" onclick="handlesubmit()">Submit</button>
  </form>


<script>

function generateTimeOptions(slot) {
  const startTimeSelect = $('#starttime');
  const endTimeSelect = $('#endtime');
  const timeGap = parseInt(slot, 10);

  // Clear existing options
  startTimeSelect.empty();
  endTimeSelect.empty();

  // Generate time options from 12 am to 12 pm
  let startTime = moment('00:00', 'HH:mm');
  const endTime = moment('12:00', 'HH:mm');

  while (startTime.isBefore(endTime)) {
    const optionValue = startTime.format('HH:mm');
    const optionText = startTime.format('hh:mm A');
    
    startTimeSelect.append(`<option value="${optionValue}">${optionText}</option>`);
    endTimeSelect.append(`<option value="${optionValue}">${optionText}</option>`);

    startTime.add(timeGap, 'minutes');
  }
}

$(document).ready(function() {
  // Initial generation with default slot value
  const defaultSlot = '30';
  generateTimeOptions(defaultSlot);
});

// Event handler for slot change
$('#slot').on('change', function() {
  const selectedSlot = $(this).val();
  generateTimeOptions(selectedSlot);
});





//   $(document).ready(function() {
//   $('.timepicker').timepicker({
//     showMeridian: false,
//     minuteStep: 1,
//     defaultTime: false,
//     showInputs: false,
//     disableFocus: true,
//     icons: {
//       up: 'fa fa-chevron-up',
//       down: 'fa fa-chevron-down'
//     }
//   });
// });

function handlesubmit(){
         
         var docid = $('#docid').val();
         var avdate = $('#avdate').val();
         var sdate = $('#starttime').val();
         var edate = $('#endtime').val();
         var slot = $('#slot').val();
       
         var baseurl= "<%= base_url %>";
         var url= baseurl+"savedocform";
         var datatosend={
            docid,
            avdate,
            sdate,
            edate,
            slot
         };
         console.log("datatosend",datatosend)
         const requestOptions = {
         method: 'POST',
         headers: {
    'Content-Type': 'application/json'
  },
         body: JSON.stringify(datatosend)
     };
     fetch(url, requestOptions)
     .then(response => response.json())
     .then(data => {
         if(data.status){
             alert(data.message);
         }else{
             alert(data.message);
         }
     })
  
         }
         
</script>